/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2017-12-10 04:33:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.text.*;

public final class notice_005finsert_005fdb_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=euc-kr");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("euc-kr"); 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\" xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\" />\r\n");
      out.write("    <title>Mr.Bread</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"/>\r\n");
      out.write("    <div id=\"container\">\r\n");
      out.write("        <div>\r\n");
      out.write("            <ul class=\"h\">\r\n");
      out.write("                <li class=\"h\"><a class=\"h\" href=\"homelogin.jsp\">HOME</a></li>\r\n");
      out.write("                <li class=\"h\"><a class=\"h\" href=\"content.jsp\">CONTENT</a></li>\r\n");
      out.write("                <li class=\"h\"><a class=\"h\" href=\"order.jsp\">ORDER</a></li>\r\n");
      out.write("                <li class=\"h\"><a class=\"h\" href=\"about.jsp\">ABOUT</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("        <br /><br /><br />\r\n");
      out.write("        <div id=\"main\">\r\n");
      out.write("            <div id=\"part1\">\r\n");
      out.write("    ");

      int temp = 0, cnt;
      int new_id = 0,ref=0;
      String title,date,content,reply;
      Connection conn = null;
      Statement stmt = null;
      ResultSet rs = null;
      String sql_update;

      try {
          Class.forName("com.mysql.jdbc.Driver");
          String jdbcurl = "jdbc:mysql://localhost:3306/notice_list";
          conn = DriverManager.getConnection(jdbcurl, "root", "1015");
          stmt = conn.createStatement();
          String sql = "select max(id) as max_id, count(*) as cnt from notice_list";
          rs = stmt.executeQuery(sql);
      }

      catch(Exception e) {
               out.println("DB 연동 오류입니다. : " + e.getMessage());
         }

     while(rs.next()) {
         cnt = Integer.parseInt(rs.getString("cnt"));
         if(cnt != 0)
           new_id = Integer.parseInt(rs.getString("max_id"));
     }

     new_id++;
     title = request.getParameter("title");
     date = request.getParameter("date");
     content = request.getParameter("content");
     reply = request.getParameter("reply");

     if("y".equals(reply)) {
            ref = Integer.parseInt(request.getParameter("ref"));
     } else {
            ref = new_id;
     }
     
     sql_update = "insert into notice_list values (" + new_id + ",'"+ title + "','" +
     date + "','" + content + "'," + ref + ")";

     try {
            stmt.executeUpdate(sql_update);
     }
     catch(Exception e) {
         out.println("DB 연동 오류입니다. : "+ e.getMessage());
     }
     
      out.write(" \r\n");
      out.write("\r\n");
      out.write("     \t\t<center>\r\n");
      out.write("     \t\t<p class = \"p7\"><br> Notice has been uploaded :)\r\n");
      out.write("\t\t<br><br><br>\r\n");
      out.write("     \t\t<p class = \"p7\"><a href =\"notice_admin.jsp\"> Go to the Notice Page</a> &nbsp;&nbsp;&nbsp;\r\n");
      out.write("     \t\t<a href =\"homelogin.jsp\"> Go to the Home Page</a><br><br></p>\r\n");
      out.write("     \t\t</center>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div id=\"part2\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <marquee width=\"auto\" direction=\"right\" behavior=\"scroll\" scrollamount=\"7\" scrolldelay=\"10\" loop=\"10\" hspace=\"5\" vspace=\"5\">\r\n");
      out.write("                        <img src=\"1.jpg\">\r\n");
      out.write("                        <img src=\"4.jpg\">\r\n");
      out.write("                        <img src=\"2.jpg\">\r\n");
      out.write("                        <img src=\"3.jpg\">\r\n");
      out.write("                        <img src=\"5.jpg\">\r\n");
      out.write("                    </marquee>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("     </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
